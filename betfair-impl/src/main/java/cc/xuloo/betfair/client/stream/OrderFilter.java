/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * OpenAPI spec version: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package cc.xuloo.betfair.client.stream;

import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Value;

import java.util.List;


/**
 * OrderFilter
 */
@Value
@Builder
public class OrderFilter   {

  /**
   * Returns overall / net position (See: OrderRunnerChange.mb / OrderRunnerChange.ml). Default=true
   * @return includeOverallPosition
   **/
  private final Boolean includeOverallPosition;

  /**
   * Internal use only & should not be set on your filter (your subscription is already locked to your account). If set subscription will fail.
   * @return accountIds
   **/
  private final List<Long> accountIds;

  /**
   * Restricts to specified customerStrategyRefs; this will filter orders and StrategyMatchChanges accordingly (Note: overall postition is not filtered)
   * @return customerStrategyRefs
   **/
  private final List<String> customerStrategyRefs;

  /**
   * Returns strategy positions (See: OrderRunnerChange.smc=Map<customerStrategyRef, StrategyMatchChange>) - these are sent in delta format as per overall position. Default=false
   * @return partitionMatchedByStrategyRef
   **/
  private final Boolean partitionMatchedByStrategyRef;

  public OrderFilter(@JsonProperty("includeOverallPosition") Boolean includeOverallPosition,
                     @JsonProperty("includeOverallPosition") List<Long> accountIds,
                     @JsonProperty("includeOverallPosition") List<String> customerStrategyRefs,
                     @JsonProperty("includeOverallPosition") Boolean partitionMatchedByStrategyRef) {
    this.includeOverallPosition = includeOverallPosition;
    this.accountIds = accountIds;
    this.customerStrategyRefs = customerStrategyRefs;
    this.partitionMatchedByStrategyRef = partitionMatchedByStrategyRef;
  }
}

