/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * OpenAPI spec version: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package cc.xuloo.betfair.client.stream;

import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Value;


/**
 * StatusMessage
 */
@Value
public class StatusMessage implements ResponseMessage  {

    /**
    * The type of error in case of a failure
    */
    public enum ErrorCode {

        NO_APP_KEY("NO_APP_KEY"),
        INVALID_APP_KEY("INVALID_APP_KEY"),
        NO_SESSION("NO_SESSION"),
        INVALID_SESSION_INFORMATION("INVALID_SESSION_INFORMATION"),
        NOT_AUTHORIZED("NOT_AUTHORIZED"),
        INVALID_INPUT("INVALID_INPUT"),
        INVALID_CLOCK("INVALID_CLOCK"),
        UNEXPECTED_ERROR("UNEXPECTED_ERROR"),
        TIMEOUT("TIMEOUT"),
        SUBSCRIPTION_LIMIT_EXCEEDED("SUBSCRIPTION_LIMIT_EXCEEDED"),
        INVALID_REQUEST("INVALID_REQUEST"),
        CONNECTION_FAILED("CONNECTION_FAILED"),
        MAX_CONNECTION_LIMIT_EXCEEDED("MAX_CONNECTION_LIMIT_EXCEEDED");

        private String value;

        ErrorCode(String value) {
          this.value = value;
        }

        @Override
        public String toString() {
      return String.valueOf(value);
    }
    }

    /**
    * The status of the last request
    */
    public enum StatusCode {

        SUCCESS("SUCCESS"),
        FAILURE("FAILURE");

        private String value;

        StatusCode(String value) {
          this.value = value;
        }

        @Override
        public String toString() {
      return String.valueOf(value);
    }
    }

    /**
     * Client generated unique id to link request with response (like json rpc)
     * @return id
     **/
    private final Integer id;

    private String errorMessage = null;

    private final ErrorCode errorCode;

    private final String connectionId;

    private final Boolean connectionClosed;

    private final StatusCode statusCode;

    public StatusMessage(@JsonProperty("id") Integer id,
                       @JsonProperty("errorCode") ErrorCode errorCode,
                       @JsonProperty("connectionId") String connectionId,
                       @JsonProperty("connectionClosed") Boolean connectionClosed,
                       @JsonProperty("statusCode") StatusCode statusCode) {
        this.id = id;
        this.errorCode = errorCode;
        this.connectionId = connectionId;
        this.connectionClosed = connectionClosed;
        this.statusCode = statusCode;
    }
}

