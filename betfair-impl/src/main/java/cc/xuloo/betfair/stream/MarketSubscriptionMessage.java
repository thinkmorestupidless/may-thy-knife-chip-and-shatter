/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * OpenAPI spec version: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package cc.xuloo.betfair.stream;

import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Value;

/**
 * MarketSubscriptionMessage
 */
@Value
@Builder
public class MarketSubscriptionMessage implements RequestMessage  {

    /**
     * Client generated unique id to link request with response (like json rpc)
     * @return id
     **/
    private final Integer id;

    /**
    * Segmentation Enabled - allow the server to send large sets of data in segments, instead of a single block
    * @return segmentationEnabled
    **/
    private final Boolean segmentationEnabled;

    /**
    * Token value delta (received in MarketChangeMessage) that should be passed to resume a subscription
    * @return clk
    **/
    private final String clk;

    /**
    * Heartbeat Milliseconds - the heartbeat rate (looped back on initial image after validation: bounds are 500 to 5000)
    * @return heartbeatMs
    **/
    private final Long heartbeatMs;

    /**
    * Token value (received in initial MarketChangeMessage) that should be passed to resume a subscription
    * @return initialClk
    **/
    private final String initialClk;

    private final MarketFilter marketFilter;

    /**
    * Conflate Milliseconds - the conflation rate (looped back on initial image after validation: bounds are 0 to 120000)
    * @return conflateMs
    **/
    private final Long conflateMs;

    private final MarketDataFilter marketDataFilter;

    public MarketSubscriptionMessage(@JsonProperty("id") Integer id,
                                     @JsonProperty("segmentationEnabled") Boolean segmentationEnabled,
                                     @JsonProperty("clk") String clk,
                                     @JsonProperty("heartbeatMs") Long heartbeatMs,
                                     @JsonProperty("initialClk") String initialClk,
                                     @JsonProperty("marketFilter") MarketFilter marketFilter,
                                     @JsonProperty("conflateMs") Long conflateMs,
                                     @JsonProperty("marketDataFilter") MarketDataFilter marketDataFilter) {
        this.id = id;
        this.segmentationEnabled = segmentationEnabled;
        this.clk = clk;
        this.heartbeatMs = heartbeatMs;
        this.initialClk = initialClk;
        this.marketFilter = marketFilter;
        this.conflateMs = conflateMs;
        this.marketDataFilter = marketDataFilter;
    }

    public Integer getId() {
        return id;
    }
}

