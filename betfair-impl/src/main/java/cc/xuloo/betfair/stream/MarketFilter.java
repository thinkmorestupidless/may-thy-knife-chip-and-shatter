/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * OpenAPI spec version: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package cc.xuloo.betfair.stream;

import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Singular;
import lombok.Value;

import java.util.List;


/**
 * MarketFilter
 */
@Value
@Builder
public class MarketFilter {

    /**
    * Gets or Sets bettingTypes
    */
    public enum BettingTypesEnum {

        ODDS("ODDS"),
        LINE("LINE"),
        RANGE("RANGE"),
        ASIAN_HANDICAP_DOUBLE_LINE("ASIAN_HANDICAP_DOUBLE_LINE"),
        ASIAN_HANDICAP_SINGLE_LINE("ASIAN_HANDICAP_SINGLE_LINE");

        private String value;

        BettingTypesEnum(String value) {
          this.value = value;
        }

        @Override
        public String toString() {
          return String.valueOf(value);
        }
    }

    @Singular
    private final List<BettingTypesEnum> bettingTypes;

    @Singular
    private final List<String> countryCodes;

    private final Boolean turnInPlayEnabled;

    @Singular
    private final List<String> marketTypes;

    @Singular
    private final List<String> venues;

    @Singular
    private final List<String> marketIds;

    @Singular
    private final List<String> eventTypeIds;

    @Singular
    private final List<String> eventIds;

    private final Boolean bspMarket;

    public MarketFilter(@JsonProperty("bettingTypes") List<BettingTypesEnum> bettingTypes,
                        @JsonProperty("countryCodes") List<String> countryCodes,
                        @JsonProperty("turnInPlayEnabled") Boolean turnInPlayEnabled,
                        @JsonProperty("marketTypes") List<String> marketTypes,
                        @JsonProperty("venues") List<String> venues,
                        @JsonProperty("marketIds") List<String> marketIds,
                        @JsonProperty("eventTypeIds") List<String> eventTypeIds,
                        @JsonProperty("eventIds") List<String> eventIds,
                        @JsonProperty("bspMarket") Boolean bspMarket) {
        this.bettingTypes = bettingTypes;
        this.countryCodes = countryCodes;
        this.turnInPlayEnabled = turnInPlayEnabled;
        this.marketTypes = marketTypes;
        this.venues = venues;
        this.marketIds = marketIds;
        this.eventTypeIds = eventTypeIds;
        this.eventIds = eventIds;
        this.bspMarket = bspMarket;
    }
}

